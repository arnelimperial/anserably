{"remainingRequest":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/engine/Documents/D-VJ/QA2/qa/frontend/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/src/views/Home.vue","mtime":1590228581492},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/css-loader/dist/cjs.js","mtime":1588785012329},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1588785012576},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/postcss-loader/src/index.js","mtime":1584985692666},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1588785011040},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/vue-loader/lib/index.js","mtime":1588785012576}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaG9tZSB7CiAgbWFyZ2luLXRvcDogMTAwcHggIWltcG9ydGFudDsKfQoK"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home text-primary\">\n    <div class=\"container mt-2\">\n      <div v-for=\"question in questions\" :key=\"question.pk\">\n        <p class=\"mb-0\">Posted by:\n          <span class=\"text-info\">{{ question.author }}</span>\n        </p>\n        <h2>\n          <router-link :to=\"{ name: 'question', params: { slug: question.slug }}\"> \n            {{ question.content }}\n          </router-link>\n        </h2>\n        <p class=\"w3-text-indigo\">Answers: {{ question.answers_count }}</p>\n        <hr>\n      </div>\n    </div>\n       \n        \n  </div>\n</template>\n\n<script>\nimport { APIService } from \"../common/api.service.js\";\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      questions: []\n    }\n  },\n  methods: {\n    getQuestions() {\n      // make a GET Request to the questions list endpoint and populate the questions array\n      let endpoint = \"/api/questions/\";\n  \n      APIService(endpoint)\n        .then(data => {\n          this.questions.push(...data.results)\n          \n        })\n    }\n  },\n  created() {\n    this.getQuestions()\n    document.title = \"QuestionTime\";\n  }\n};\n</script>\n\n<style scoped>\n  .home {\n    margin-top: 100px !important;\n  }\n\n</style>\n\n"]}]}