{"remainingRequest":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/babel-loader/lib/index.js!/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/engine/Documents/D-VJ/QA2/qa/frontend/src/views/QuestionEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/src/views/QuestionEditor.vue","mtime":1590141046631},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1588785011040},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/babel-loader/lib/index.js","mtime":1584985692138},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1588785011040},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/vue-loader/lib/index.js","mtime":1588785012576}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQVBJU2VydmljZSB9IGZyb20gIi4uL2NvbW1vbi9hcGkuc2VydmljZS5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUXVlc3Rpb25FZGl0b3IiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVzdGlvbl9ib2R5OiBudWxsLAogICAgICBlcnJvcjogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0OiBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8vIFRlbGwgdGhlIFJFU1QgQVBJIHRvIGNyZWF0ZSBvciB1cGRhdGUgYSBRdWVzdGlvbiBJbnN0YW5jZQogICAgICBpZiAoIXRoaXMucXVlc3Rpb25fYm9keSkgewogICAgICAgIHRoaXMuZXJyb3IgPSAiWW91IGNhbid0IHNlbmQgYW4gZW1wdHkgcXVlc3Rpb24hIjsKICAgICAgfSBlbHNlIGlmICh0aGlzLnF1ZXN0aW9uX2JvZHkubGVuZ3RoID4gMjQwKSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICJFbnN1cmUgdGhpcyBmaWVsZCBoYXMgbm8gbW9yZSB0aGFuIDI0MCBjaGFyYWN0ZXJzISI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGVuZHBvaW50ID0gIi9hcGkvcXVlc3Rpb25zLyI7CiAgICAgICAgdmFyIG1ldGhvZCA9ICJQT1NUIjsKICAgICAgICBhcGlTZXJ2aWNlKGVuZHBvaW50LCBtZXRob2QsIHsKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMucXVlc3Rpb25fYm9keQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHF1ZXN0aW9uX2RhdGEpIHsKICAgICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgIG5hbWU6ICdxdWVzdGlvbicsCiAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgIHNsdWc6IHF1ZXN0aW9uX2RhdGEuc2x1ZwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGRvY3VtZW50LnRpdGxlID0gIkVkaXRvciAtIFF1ZXN0aW9uVGltZSI7CiAgfQp9Ow=="},{"version":3,"sources":["QuestionEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,UAAA,QAAA,0BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA;AACA,UAAA,CAAA,KAAA,aAAA,EAAA;AACA,aAAA,KAAA,GAAA,mCAAA;AACA,OAFA,MAEA,IAAA,KAAA,aAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,oDAAA;AACA,OAFA,MAEA;AACA,YAAA,QAAA,GAAA,iBAAA;AACA,YAAA,MAAA,GAAA,MAAA;AAEA,QAAA,UAAA,CAAA,QAAA,EAAA,MAAA,EAAA;AAAA,UAAA,OAAA,EAAA,KAAA;AAAA,SAAA,CAAA,CACA,IADA,CACA,UAAA,aAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,UADA;AAEA,YAAA,MAAA,EAAA;AAAA,cAAA,IAAA,EAAA,aAAA,CAAA;AAAA;AAFA,WAAA;AAIA,SANA;AAOA;AACA;AAnBA,GARA;AA6BA,EAAA,OA7BA,qBA6BA;AACA,IAAA,QAAA,CAAA,KAAA,GAAA,uBAAA;AACA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"container mt-2\">\n    <h1 class=\"mb-3\">Ask a Question</h1>\n    <form @submit.prevent=\"onSubmit\">\n      <textarea\n        v-model=\"question_body\"\n        class=\"form-control\"\n        placeholder=\"What do you want to ask?\"\n        rows=\"3\"\n      ></textarea>\n      <br>\n      <button\n        type=\"submit\"\n        class=\"btn btn-success\"\n        >Publish\n      </button>\n    </form>\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\n  </div>\n</template>\n\n<script>\nimport { APIService } from \"../common/api.service.js\";\nexport default {\n  name: \"QuestionEditor\",\n  data() {\n    return {\n      question_body: null,\n      error: null\n    }\n  },\n  methods: {\n    onSubmit() {\n      // Tell the REST API to create or update a Question Instance\n      if (!this.question_body) {\n        this.error = \"You can't send an empty question!\";\n      } else if (this.question_body.length > 240) {\n        this.error = \"Ensure this field has no more than 240 characters!\";\n      } else {\n        let endpoint = \"/api/questions/\";\n        let method = \"POST\"; \n       \n        apiService(endpoint, method, { content: this.question_body })\n          .then(question_data => {\n            this.$router.push({ \n              name: 'question', \n              params: { slug: question_data.slug }\n            })          \n          })  \n      }\n    }\n  },\n  created() {\n    document.title = \"Editor - QuestionTime\";\n  }  \n}\n</script>"],"sourceRoot":"src/views"}]}