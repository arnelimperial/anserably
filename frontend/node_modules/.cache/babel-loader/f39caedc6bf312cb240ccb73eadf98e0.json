{"remainingRequest":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/babel-loader/lib/index.js!/Users/engine/Documents/D-VJ/QA2/qa/frontend/src/common/csrf_token.js","dependencies":[{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/src/common/csrf_token.js","mtime":1589701413255},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1588785011040},{"path":"/Users/engine/Documents/D-VJ/QA2/qa/frontend/node_modules/babel-loader/lib/index.js","mtime":1584985692138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CgovLyBodHRwczovL2RvY3MuZGphbmdvcHJvamVjdC5jb20vZW4vZGV2L3JlZi9jc3JmLyNhY3F1aXJpbmctdGhlLXRva2VuLWlmLWNzcmYtdXNlLXNlc3Npb25zLWFuZC1jc3JmLWNvb2tpZS1odHRwb25seS1hcmUtZmFsc2UKZnVuY3Rpb24gZ2V0Q29va2llKG5hbWUpIHsKICB2YXIgY29va2llVmFsdWUgPSBudWxsOwoKICBpZiAoZG9jdW1lbnQuY29va2llICYmIGRvY3VtZW50LmNvb2tpZSAhPT0gJycpIHsKICAgIHZhciBjb29raWVzID0gZG9jdW1lbnQuY29va2llLnNwbGl0KCc7Jyk7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb29raWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBjb29raWUgPSBjb29raWVzW2ldLnRyaW0oKTsgLy8gRG9lcyB0aGlzIGNvb2tpZSBzdHJpbmcgYmVnaW4gd2l0aCB0aGUgbmFtZSB3ZSB3YW50PwoKICAgICAgaWYgKGNvb2tpZS5zdWJzdHJpbmcoMCwgbmFtZS5sZW5ndGggKyAxKSA9PT0gbmFtZSArICc9JykgewogICAgICAgIGNvb2tpZVZhbHVlID0gZGVjb2RlVVJJQ29tcG9uZW50KGNvb2tpZS5zdWJzdHJpbmcobmFtZS5sZW5ndGggKyAxKSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBjb29raWVWYWx1ZTsKfQoKdmFyIENTUkZfVE9LRU4gPSBnZXRDb29raWUoJ2NzcmZ0b2tlbicpOwpleHBvcnQgeyBDU1JGX1RPS0VOIH07"},{"version":3,"sources":["/Users/engine/Documents/D-VJ/QA2/qa/frontend/src/common/csrf_token.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","CSRF_TOKEN"],"mappings":";;;;AAAA;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,MAAIC,WAAW,GAAG,IAAlB;;AACA,MAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC7C,QAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CADuC,CAEvC;;AACA,UAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAA0CP,IAAI,GAAG,GAArD,EAA2D;AACzDC,QAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACD;AACF;AACF;;AACD,SAAON,WAAP;AACD;;AAED,IAAIU,UAAU,GAAGZ,SAAS,CAAC,WAAD,CAA1B;AAEA,SAASY,UAAT","sourcesContent":["// https://docs.djangoproject.com/en/dev/ref/csrf/#acquiring-the-token-if-csrf-use-sessions-and-csrf-cookie-httponly-are-false\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n  \n  var CSRF_TOKEN = getCookie('csrftoken');\n  \n  export { CSRF_TOKEN };"]}]}